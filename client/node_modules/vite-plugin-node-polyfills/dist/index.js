import { createRequire as n } from "node:module";
import p from "@rollup/plugin-inject";
import u from "node-stdlib-browser";
import { handleCircularDependancyWarning as c } from "node-stdlib-browser/helpers/rollup/plugin";
import f from "node-stdlib-browser/helpers/esbuild/plugin";
const I = (i = {}) => {
  const r = n(import.meta.url).resolve("node-stdlib-browser/helpers/esbuild/shim"), t = {
    protocolImports: !0,
    ...i
  };
  return {
    name: "vite-plugin-node-polyfills",
    config: (a, b) => {
      const s = Object.entries(u).reduce((o, [e, l]) => (!t.protocolImports && /^node:/.test(e) || (o[e] = l), o), {});
      return {
        build: {
          rollupOptions: {
            onwarn: (o, e) => {
              c(o, e);
            },
            plugins: [
              {
                ...p({
                  global: [r, "global"],
                  process: [r, "process"],
                  Buffer: [r, "Buffer"]
                })
              }
            ]
          }
        },
        optimizeDeps: {
          esbuildOptions: {
            define: {
              Buffer: "Buffer",
              global: "global",
              process: "process"
            },
            inject: [
              r
            ],
            plugins: [
              f(s)
            ]
          }
        },
        resolve: {
          alias: {
            ...s
          }
        }
      };
    }
  };
};
export {
  I as nodePolyfills
};
//# sourceMappingURL=index.js.map
